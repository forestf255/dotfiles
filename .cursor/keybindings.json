// Place your key bindings in this file to override the defaults
[
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'",
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.navigateDown",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'",
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.navigateUp",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'",
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'",
  },
  {
    "key": "ctrl+,",
    "command": "",
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+c",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "searchViewletFocus"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.replaceInFiles",
  },
  {
    "key": "ctrl+,",
    "command": "workbench.action.chat.newEditSession",
    "when": "chatEditingParticipantRegistered && chatIsEnabled && inChat && chatLocation == 'editing-session'"
  },
  {
    "key": "ctrl+l",
    "command": "-workbench.action.chat.newEditSession",
    "when": "chatEditingParticipantRegistered && chatIsEnabled && inChat && chatLocation == 'editing-session'"
  },
  {
    "key": "ctrl+,",
    "command": "workbench.action.chat.newChat",
    "when": "chatIsEnabled && inChat && chatLocation != 'editing-session'"
  },
  {
    "key": "ctrl+l",
    "command": "-workbench.action.chat.newChat",
    "when": "chatIsEnabled && inChat && chatLocation != 'editing-session'"
  },
  {
    "key": "ctrl+shift+,",
    "command": "aichat.insertselectionintochat"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-aichat.insertselectionintochat"
  },
  {
    "key": "ctrl+,",
    "command": "aichat.newchataction"
  },
  {
    "key": "ctrl+l",
    "command": "-aichat.newchataction"
  },
  {
    "key": "ctrl+p",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "-extension.vim_ctrl+p",
    "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
},
{
    "key": "ctrl+t",
    "command": "workbench.action.togglePanel"
},
{
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
},
{
    "key": "ctrl+h",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
},
{
    "key": "ctrl+shift+h",
    "command": "-workbench.action.replaceInFiles"
},
{
    "key": "ctrl+h",
    "command": "-editor.action.simpleInlineDiffs.rejectAll",
    "when": "editorTextFocus && hasDisplayedSimpleDiff"
},
{
    "key": "ctrl+t",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
},
{
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
},
{
    "key": "ctrl+x",
    "command": "-extension.vim_ctrl+x",
    "when": "editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"
},
{
  "key": "-",
  "command": "workbench.action.toggleSidebarVisibility",
  "when": "explorerViewletVisible"
},
{
  "key": "-",
  "command": "workbench.view.explorer",
  "when": "!explorerViewletVisible && (!editorTextFocus || (vim.active && vim.mode != 'Insert'))"
},
{
  "key": "ctrl+b",
  "command": "-workbench.action.toggleSidebarVisibility",
  "when": "editorTextFocus && vim.active && vim.mode != 'Insert'",
},
{
  "key": "ctrl+f",
  "command": "-extension.vim_ctrl+f",
  "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
},
{
  "key": "ctrl+f",
  "command": "editor.action.startFindReplaceAction",
  "when": "editorFocus || editorIsOpen"
},
{
  "key": "ctrl+.",
  "command": "aipopup.action.modal.generate",
  "when": "editorFocus && !composerBarIsVisible"
},
{
  "key": "ctrl+k",
  "command": "-aipopup.action.modal.generate",
  "when": "editorFocus && !composerBarIsVisible"
},
{
  "key": "ctrl+k",
  "command": "-extension.vim_ctrl+k",
  "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
},
{
  "key": "ctrl+k",
  "command": "-cursorai.action.generateInTerminal",
  "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
},
{
  "key": "ctrl+f",
  "command": "-actions.find",
  "when": "editorFocus || editorIsOpen"
},
{
  "key": "ctrl+i",
  "command": "-workbench.action.terminal.chat.start",
  "when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
},
{
  "key": "ctrl+i",
  "command": "-workbench.action.chat.startVoiceChat",
  "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress"
},
{
  "key": "ctrl+i",
  "command": "-workbench.action.chat.stopListeningAndSubmit",
  "when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
},
{
  "key": "ctrl+i",
  "command": "-editor.action.triggerSuggest",
  "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
},
{
  "key": "ctrl+i",
  "command": "-composer.startComposerPrompt",
  "when": "composerIsEnabled"
},
{
  "key": "ctrl+.",
  "command": "composer.startComposerPrompt"
},
{
  "key": "ctrl+.",
  "command": "-editor.changeDropType",
  "when": "dropWidgetVisible"
},
{
  "key": "ctrl+.",
  "command": "-editor.changePasteType",
  "when": "pasteWidgetVisible"
},
{
  "key": "ctrl+.",
  "command": "-problems.action.showQuickFixes",
  "when": "problemFocus"
},
{
  "key": "ctrl+.",
  "command": "-acceptSelectedCodeAction",
  "when": "codeActionMenuVisible"
},
{
  "key": "ctrl+.",
  "command": "-workbench.action.terminal.showQuickFixes",
  "when": "terminalFocus"
},
]
